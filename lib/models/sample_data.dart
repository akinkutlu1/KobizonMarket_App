import 'product.dart';

class SampleData {
  static List<Product> products = [
    Product(
      id: '1',
      name: 'Fresh Bananas',
      description: 'Organic yellow bananas, perfect for smoothies and snacks',
      price: 2.99,
      imageUrl: 'assets/images/muz.png',
      category: 'Fruits',
      categoryId: 1,
      rating: 4.5,
      reviewCount: 128,
      unit: 'kg',
    ),
    Product(
      id: '2',
      name: 'Organic Apples',
      description: 'Sweet and crisp organic red apples',
      price: 4.99,
      imageUrl: 'assets/images/apple.png',
      category: 'Fruits',
      categoryId: 1,
      rating: 4.3,
      reviewCount: 89,
      unit: 'kg',
    ),
    Product(
      id: '3',
      name: 'Fresh Milk',
      description: 'Farm fresh whole milk, rich in calcium',
      price: 3.49,
      imageUrl: 'assets/images/milk.png',
      category: 'Dairy',
      categoryId: 3,
      rating: 4.7,
      reviewCount: 256,
      unit: 'liter',
    ),
    Product(
      id: '4',
      name: 'Whole Grain Bread',
      description: 'Freshly baked whole grain bread',
      price: 2.99,
      imageUrl: 'assets/images/bread.png',
      category: 'Bakery',
      categoryId: 5,
      rating: 4.2,
      reviewCount: 67,
      unit: 'piece',
    ),
    Product(
      id: '5',
      name: 'Organic Eggs',
      description: 'Farm fresh organic eggs, 12 pieces',
      price: 5.99,
      imageUrl: 'assets/images/eggs.png',
      category: 'Dairy',
      categoryId: 3,
      rating: 4.6,
      reviewCount: 189,
      unit: 'dozen',
    ),
    Product(
      id: '6',
      name: 'Fresh Tomatoes',
      description: 'Ripe and juicy red tomatoes',
      price: 3.99,
      imageUrl: 'assets/images/tomato.png',
      category: 'Vegetables',
      categoryId: 2,
      rating: 4.4,
      reviewCount: 145,
      unit: 'kg',
    ),
    Product(
      id: '7',
      name: 'Chicken Breast',
      description: 'Fresh boneless chicken breast',
      price: 12.99,
      imageUrl: 'assets/images/chicken.png',
      category: 'Meat',
      categoryId: 4,
      rating: 4.8,
      reviewCount: 234,
      unit: 'kg',
    ),
    Product(
      id: '8',
      name: 'Brown Rice',
      description: 'Organic brown rice, rich in fiber',
      price: 6.99,
      imageUrl: 'assets/images/rice.png',
      category: 'Grains',
      categoryId: 6,
      rating: 4.1,
      reviewCount: 78,
      unit: 'kg',
    ),
    Product(
      id: '9',
      name: 'Fresh Bananas',
      description: 'Organic yellow bananas, perfect for smoothies and snacks',
      price: 2.99,
      imageUrl: 'assets/images/muz.png',
      category: 'Exclusive',
      categoryId: 1,
      rating: 4.5,
      reviewCount: 128,
      unit: 'kg',
    ),
    Product(
      id: '10',
      name: 'Ginger & Mint',
      description: 'Fresh ginger and mint combination',
      price: 5.99,
      imageUrl: 'assets/images/zencefil.png',
      category: 'Exclusive',
      categoryId: 2,
      rating: 4.3,
      reviewCount: 89,
      unit: '500g',
    ),
    Product(
      id: '11',
      name: 'Fresh Apple',
      description: 'Sweet and crisp organic red apples',
      price: 3.99,
      imageUrl: 'assets/images/elma.png',
      category: 'Exclusive',
      categoryId: 1,
      rating: 4.4,
      reviewCount: 145,
      unit: 'kg',
    ),
    Product(
      id: '12',
      name: 'Bell Pepper',
      description: 'Fresh red bell peppers',
      price: 2.99,
      imageUrl: 'assets/images/biber1.png',
      category: 'Exclusive',
      categoryId: 2,
      rating: 4.2,
      reviewCount: 95,
      unit: 'kg',
    ),
    // Daha fazla ürün ekleniyor
    Product(
      id: '13',
      name: 'Carrots',
      description: 'Fresh orange carrots',
      price: 1.99,
      imageUrl: 'assets/images/carrot.png',
      category: 'Vegetables',
      categoryId: 2,
      rating: 4.0,
      reviewCount: 67,
      unit: 'kg',
    ),
    Product(
      id: '14',
      name: 'Onions',
      description: 'Fresh white onions',
      price: 2.49,
      imageUrl: 'assets/images/onion.png',
      category: 'Vegetables',
      categoryId: 2,
      rating: 4.1,
      reviewCount: 89,
      unit: 'kg',
    ),
    Product(
      id: '15',
      name: 'Cheese',
      description: 'Fresh cheddar cheese',
      price: 8.99,
      imageUrl: 'assets/images/cheese.png',
      category: 'Dairy',
      categoryId: 3,
      rating: 4.6,
      reviewCount: 156,
      unit: 'kg',
    ),
    Product(
      id: '16',
      name: 'Yogurt',
      description: 'Natural yogurt',
      price: 4.49,
      imageUrl: 'assets/images/yogurt.png',
      category: 'Dairy',
      categoryId: 3,
      rating: 4.3,
      reviewCount: 123,
      unit: 'liter',
    ),
    Product(
      id: '17',
      name: 'Beef',
      description: 'Fresh beef steak',
      price: 18.99,
      imageUrl: 'assets/images/beef.png',
      category: 'Meat',
      categoryId: 4,
      rating: 4.7,
      reviewCount: 234,
      unit: 'kg',
    ),
    Product(
      id: '18',
      name: 'Fish',
      description: 'Fresh salmon',
      price: 24.99,
      imageUrl: 'assets/images/fish.png',
      category: 'Meat',
      categoryId: 4,
      rating: 4.8,
      reviewCount: 189,
      unit: 'kg',
    ),
    Product(
      id: '19',
      name: 'Croissant',
      description: 'Fresh baked croissant',
      price: 3.99,
      imageUrl: 'assets/images/croissant.png',
      category: 'Bakery',
      categoryId: 5,
      rating: 4.4,
      reviewCount: 98,
      unit: 'piece',
    ),
    Product(
      id: '20',
      name: 'Cake',
      description: 'Chocolate cake',
      price: 12.99,
      imageUrl: 'assets/images/cake.png',
      category: 'Bakery',
      categoryId: 5,
      rating: 4.5,
      reviewCount: 145,
      unit: 'piece',
    ),
    Product(
      id: '21',
      name: 'Pasta',
      description: 'Italian pasta',
      price: 5.99,
      imageUrl: 'assets/images/pasta.png',
      category: 'Grains',
      categoryId: 6,
      rating: 4.2,
      reviewCount: 78,
      unit: 'kg',
    ),
    Product(
      id: '22',
      name: 'Bread',
      description: 'Whole wheat bread',
      price: 2.49,
      imageUrl: 'assets/images/bread.png',
      category: 'Bakery',
      categoryId: 5,
      rating: 4.1,
      reviewCount: 67,
      unit: 'piece',
    ),
    Product(
      id: '23',
      name: 'Orange Juice',
      description: 'Fresh orange juice',
      price: 6.99,
      imageUrl: 'assets/images/orange_juice.png',
      category: 'Beverages',
      categoryId: 8,
      rating: 4.3,
      reviewCount: 112,
      unit: 'liter',
    ),
    Product(
      id: '24',
      name: 'Coffee',
      description: 'Premium coffee beans',
      price: 15.99,
      imageUrl: 'assets/images/coffee.png',
      category: 'Beverages',
      categoryId: 8,
      rating: 4.6,
      reviewCount: 234,
      unit: 'kg',
    ),
    Product(
      id: '25',
      name: 'Olive Oil',
      description: 'Extra virgin olive oil',
      price: 12.99,
      imageUrl: 'assets/images/olive_oil.png',
      category: 'Oils',
      categoryId: 7,
      rating: 4.7,
      reviewCount: 189,
      unit: 'liter',
    ),
    Product(
      id: '26',
      name: 'Sunflower Oil',
      description: 'Pure sunflower oil',
      price: 8.99,
      imageUrl: 'assets/images/sunflower_oil.png',
      category: 'Oils',
      categoryId: 7,
      rating: 4.3,
      reviewCount: 145,
      unit: 'liter',
    ),
    Product(
      id: '27',
      name: 'Butter',
      description: 'Fresh butter',
      price: 6.99,
      imageUrl: 'assets/images/butter.png',
      category: 'Oils',
      categoryId: 7,
      rating: 4.5,
      reviewCount: 167,
      unit: 'kg',
    ),
  ];

  static List<String> categories = [
    'Fruits',
    'Vegetables',
    'Dairy',
    'Meat',
    'Bakery',
    'Grains',
    'Beverages',
    'Snacks',
  ];

  static List<Product> getProductsByCategory(String category) {
    return products.where((product) => product.category == category).toList();
  }

  static List<Product> getProductsByCategoryId(int categoryId) {
    return products.where((product) => product.categoryId == categoryId).toList();
  }

  static List<Product> getFeaturedProducts() {
    return products.where((product) => product.rating >= 4.5).toList();
  }
} 